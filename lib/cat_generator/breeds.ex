defmodule CatGenerator.Breeds do
  @moduledoc """
    Cat breeds
  """

  @breeds [
    "Abyssinian",
    "Aegean",
    "American Curl",
    "American Bobtail",
    "American Shorthair",
    "American Wirehair",
    "Aphrodite Giant",
    "Arabian Mau",
    "Australian Mist",
    "Asian",
    "Asian Semi-longhair",
    "Balinese",
    "Bambino",
    "Bengal",
    "Birman",
    "Bombay",
    "Brazilian Shorthair",
    "British Longhair",
    "British Shorthair",
    "Burmese cat",
    "Burmilla",
    "California Spangled",
    "Chantilly-Tiffany",
    "Chartreux",
    "Chausie",
    "Cheetoh cat",
    "Colorpoint Shorthair",
    "Cornish Rex",
    "Cymric",
    "Cyprus",
    "Devon Rex",
    "Donskoy",
    "Dragon Li",
    "Dwarf Cat",
    "Egyptian Mau",
    "European Shorthair",
    "Exotic Shorthair",
    "Foldex",
    "German Rex",
    "Havana Brown",
    "Highlander Cat",
    "Himalayan",
    "Japanese Bobtail",
    "Javanese",
    "Karelian Bobtail",
    "Khao Manee",
    "Korat",
    "Korean Bobtail",
    "Korn Ja",
    "Kurilian Bobtail",
    "LaPerm",
    "Lykoi",
    "Maine Coon",
    "Manx",
    "Mekong Bobtail",
    "Minskin",
    "Munchkin",
    "Nebelung",
    "Napoleon",
    "Norwegian Forest Cat",
    "Ocicat",
    "Ojos Azules",
    "Oregon Rex",
    "Oriental Bicolor",
    "Oriental Shorthair",
    "Oriental Longhair",
    "PerFold",
    "Persian",
    "Traditional Persian",
    "Peterbald",
    "Pixie-bob",
    "Raas",
    "Ragamuffin",
    "Ragdoll",
    "Russian Blue",
    "Russian White",
    "Black",
    "Tabby",
    "Sam Sawet",
    "Savannah",
    "Scottish Fold",
    "Selkirk Rex",
    "Serengeti",
    "Serrade Petit",
    "Siamese",
    "Siberian",
    "Singapura",
    "Snowshoe",
    "Sokoke",
    "Somali",
    "Sphynx",
    "Suphalak",
    "Thai",
    "Thai Lilac",
    "Tonkinese",
    "Toyger",
    "Turkish Angora",
    "Turkish Van",
    "Ukrainian Levkoy",
    "York Chocolate"
  ]

  def take(count), do: Enum.take_random(@breeds, count)
  def take_one(), do: @breeds |> Enum.take_random(1) |> List.first()
  def breeds(), do: @breeds
end
